# csr.conf
# you can rename scr.conf, scr.key, scr.csr to filenames you prefer,
# but with the same filename extensions
[req]
default_bits       = 2048 #
default_md         = sha512
default_keyfile    = csr.key #name of keyfile
distinguished_name = req_distinguished_name
prompt             = yes
# If 'prompt = no' provide right values to properties, not to _default properties
# and remove or comment _default properties
# use 'yes' and _default to see and correct values interactively
encrypt_key        = no #
# req_extensions = v3_req           #this is for multi-domain certificate

[req_distinguished_name]
#
# Use your company name, e-mai, domain names as default values
# if you enter '.', the field will be left blank
#
countryName = Country Name (2 letter code)
countryName_default = GB
stateOrProvinceName = State or Province Name (full name)
stateOrProvinceName_default = City of London
localityName = Locality Name (eg, city)
localityName_default = London
organizationName = Organization name
organizationName_default = MyCompany Limited
organizationalUnitName = Organizational Unit Name (eg, section)
organizationalUnitName_default = .
commonName = This is fully qualified domain name that you wish to secure
# e.g. www.example.com or mail.example.com
commonName_default = www.my-domain.com
emailAddress = Email Address
emailAddress_default = admin@my-domain.com

# [v3_req]
# subjectAltName = @alt_names       #this is for multi-domain certificate

# [alt_names]                       #this is for multi-domain certificate
# DNS.1   = my-domain.net           #this is for multi-domain certificate
# DNS.2   = my-domain.org           #this is for multi-domain certificate
# DNS.3   = myseconddomain.com      #this is for multi-domain certificate

# to generate .csr:
# openssl req -newkey rsa:2048 -sha512 -out csr.csr -config csr.conf
# or:
# openssl req -newkey rsa:2048 -sha512 -nodes -out csr.csr -config csr.conf
# Note:  If the "-nodes" is entered the key will NOT be encrypted with a
# DES pass phrase, ( see:
# https://support.comodo.com/index.php?/Default/Knowledgebase/Article/View/1/19/csr-generation-using-openssl-apache-wmod_ssl-nginx-os-x
# )
#
# to verify .csr:
# openssl req -text -noout -verify -in csr.csr
#
# in one command generate and verify:
# openssl req -newkey rsa:2048 -out csr.csr -config csr.conf && openssl req -text -noout -verify -in csr.csr
#
